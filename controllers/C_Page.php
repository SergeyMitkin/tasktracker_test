<?php////Конттроллер главной страницы.////Импортируем модели и базовый контроллерinclude_once('models/m_tasks.php');include_once('models/m_auth.php');include_once('models/m_users.php');include_once('models/m_status.php');include_once('C_Base.php');class C_Page extends C_Base{	//	// Конструктор.	//	function __construct(){				parent::__construct();	}	// главная страница	public function action_index(){	    // если поставили галочку о выполнении задания        if (isset($_POST['completed']) && $_POST['completed'] == 'on'){            $completed_task = completedTask($_POST['id_task']);        }        // условия для корректной сортировки	    if (isset($_GET['unsetId'])        ){	        unset($_SESSION['statusId']);            unset($_SESSION['nameId']);            unset($_SESSION['emailId']);        }        if ($_POST['status'] == '0'){            unset($_SESSION['statusId']);        }        if ($_POST['name'] == '0'){            unset($_SESSION['nameId']);        }        if ($_POST['email'] == '0'){            unset($_SESSION['emailId']);        }        if (isset($_POST['status'])){            unset($_SESSION['nameId']);            unset($_SESSION['emailId']);        }        if (isset($_POST['name'])){            unset($_SESSION['statusId']);            unset($_SESSION['emailId']);        }        if (isset($_POST['email'])){            unset($_SESSION['nameId']);            unset($_SESSION['statusId']);        }        //пагинация:        $tasksCount = getTasksCount(); // получаем количесвто задач        $results_per_page = 3; // количество задач на странице        $count_pages = intdiv($tasksCount, $results_per_page) + 1; //количество страниц с задачами        //получаем текущую страницу        if (!isset($_GET['page'])){            $page = 1;        }else{            $page = $_GET['page'];        }        // определяем переменные для шаблона        $this->title .= ':: Главная';// заголовок        $statusData = getStatusData();// данные таблицы status	    $usersData = getUsersData();// данные таблицы users        $tasks = getTasks($results_per_page); // массив с задачами        // помещаемпеременные в шаблон		$this->content = $this->Template('views/v_index.php', array(		    'page' => $page,            'results_per_page' => $results_per_page,		    'tasksCount' => $tasksCount,		    'count_pages' => $count_pages,            'statusData' => $statusData,            'usersData' => $usersData,		    'tasks' => $tasks,            ));	}	// страница для создания задачи    public function action_create(){            $this->title .= '::Создайте задачу';            $usersData = getUsersData();        if($this->isPost())        {            $response = setTask($_POST['id_task']);        }        $this->content = $this->Template('views/v_task.php',            array(                'usersData' => $usersData,                'response' => $response,                ));    }    // страница для редактирования задачи    public function action_edit(){        $this->title .= '::Редактирование';        // данные задачи        $task_data = getTask($_GET['id_task']);        $task_id = $task_data['0']['id'];        $task_description = $task_data['0']['description'];        // данные пользователя        $id_user = $task_data['0']['id_user'];        $user_data = getUser($id_user);        $user_name = $user_data['0']['name'];        $user_email = $user_data['0']['email'];        if($this->isPost())        {            $response = setTask($_POST['id_task']);            header('location: index.php');            exit();        }        $this->content = $this->Template('views/v_edit.php', array(                'task_id' => $task_id,                'user_name' => $user_name,                'user_email' => $user_email,                'task_description' => $task_description,        ));    }    // страница авторизации    public function action_auth()    {        if ($_SERVER['REQUEST_METHOD'] == 'POST'){            if(!authWithCredentials()){                $autherror = 'Неправильный логин/пароль';                unset($_SESSION["user"]);                session_destroy();            }            else{                header("Location: /");            }        }        $this->content = $this->Template('views/v_auth.php',            array('autherror' => $autherror));    }}