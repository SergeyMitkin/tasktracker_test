<?phprequire_once('db.php');/** * Модель авторизации *//** * валидация пользовательского куки * @return bool */function checkAuthWithCookie(){    $result = false;    if(isset($_COOKIE['user_id']) && isset($_COOKIE['cookie_hash'])) {        // получаем данные пользователя по id        try {            // получаем данные пользователя по логину            $q = "SELECT user_id, login, user_name, password FROM users WHERE user_id = '" . $_COOKIE['user_id'] . "'";            $sql = SQL::getInstance()->Select($q);            $row = $sql['0'];            $id = $row['user_id'];            $login = $row['login'];            $hash_password = $row['password'];            $isAuth = 0;            if (($hash_password !== $_COOKIE['user_hash']) || ($id !== $_COOKIE['user_id'])) {                setcookie("id", "", time() - 3600 * 24 * 30 * 12, "/");                setcookie("hash", "", time() - 3600 * 24 * 30 * 12, "/");            } else {                header("Location: /");            }            $_SESSION['user'] = $row;            $result = true;        } catch (PDOException $e) {            die("Error: " . $e->getMessage());        }    }        return $result;}function authWithCredentials(){    $user_login = $_POST['login'];    $password = $_POST['password'];    try{        // получаем данные пользователя по логину        $q = "SELECT user_id,  login, user_name, password FROM users WHERE login = '$user_login'";        $sql = SQL::getInstance()->Select($q);        $row = $sql['0'];        $id = $row['user_id'];        $login = $row['login'];        $hash_password = $row['password'];        $isAuth = 0;        // проверяем соответствие логина и пароля        if ($login && $hash_password) {            if(checkPassword($password, $hash_password)){                $isAuth = 1;            }        }        // если стояла галка, то запоминаем пользователя на сутки        if(isset($_POST['rememberme']) && $_POST['rememberme'] == 'on'){            setcookie("user_id", $id, time()+86400);            setcookie("cookie_hash", $hash_password, time()+86400);        }        // сохраняем данные в сессию        $_SESSION['user'] = $row;    }    catch(PDOException $e){        die("Error: ".$e->getMessage());    }    return $isAuth;}function checkExistedLogin(){    $login = $_POST['login'];    try {        $q = "SELECT user_id, login FROM users WHERE login = '$login'";        $sql = SQL::getInstance()->Select($q);    }    catch(PDOException $e){        die("Error: ".$e->getMessage());    }    return (!empty($sql));}function hashPassword($password){    $salt = md5(uniqid(SALT2, true));    $salt = substr(strtr(base64_encode($salt), '+', '.'), 0, 22);    return crypt($password, '$2a$08$' . $salt);}function checkPassword($password, $hash){    return crypt($password, $hash) === $hash;}function alreadyLoggedIn(){    return isset($_SESSION['user']);}