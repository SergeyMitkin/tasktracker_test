<?phprequire_once('db.php');/** * Модель авторизации */function authWithCredentials(){    $username = $_POST['login'];    $password = $_POST['password'];    try{        // получаем данные пользователя по логину        $q = "SELECT id, `name`, login, password FROM users WHERE login = '$username'";        $sql = SQL::getInstance()->Select($q);        $row = $sql['0'];        $id = $row['id'];        $login = $row['login'];        $hash_password = $row['password'];        $isAuth = 0;        // проверяем соответствие логина и пароля        if ($login && $hash_password) {            if(checkPassword($password, $hash_password)){                $isAuth = 1;            }        }        // сохраняем данные в сессию        $_SESSION['user'] = $row;    }    catch(PDOException $e){        die("Error: ".$e->getMessage());    }    return $isAuth;}function setUser(){    $response = 'Вы успешно зарегестрированы!';    try {        $password = $_POST['password'];        $user_name = $_POST['name'];        $user_login = $_POST['login'];        $user_email = $_POST['email'];        $user_password = hashPassword($password);        $t = 'users';        $v = array('name' => $user_name, 'login' => $user_login, 'password'        => $user_password, 'email' => $user_email);        $sql = SQL::getInstance()->Insert($t, $v);    }    catch(PDOException $e){        die("Error: ".$e->getMessage());    }    return $response;}function checkExistedLogin(){    $login = $_POST['login'];    try {        $q = "SELECT id, login FROM users WHERE login = '$login'";        $sql = SQL::getInstance()->Select($q);    }    catch(PDOException $e){        die("Error: ".$e->getMessage());    }    return (!empty($sql));}function hashPassword($password){    $salt = md5(uniqid(SALT2, true));    $salt = substr(strtr(base64_encode($salt), '+', '.'), 0, 22);    return crypt($password, '$2a$08$' . $salt);}function checkPassword($password, $hash){    return crypt($password, $hash) === $hash;}